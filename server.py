"""–°–µ—Ä–≤–µ—Ä Telegram –±–æ—Ç–∞, –∑–∞–ø—É—Å–∫–∞–µ–º—ã–π –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ"""
import os
import logging
from aiogram import Bot, Dispatcher, executor, types
import requests
from bs4 import BeautifulSoup
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton


logging.basicConfig(level=logging.INFO)
API_TOKEN = os.environ["TELEGRAM_API_TOKEN"]
bot = Bot(token=API_TOKEN, parse_mode=None)
dp = Dispatcher(bot)


async def get_headers():
    """–§—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è headers –¥–ª—è request-–∑–∞–ø—Ä–æ—Å–∞"""
    headers = {"user-agent": "Mozilla/5.0 (X11; Linux x86_64; rv:96.0) Gecko/20100101 Firefox/96.0", "accept": "application/json, text/javascript, */*; q=0.01"}
    return headers 


async def get_url(crypto):
    """–§—É–Ω–∫—Ü–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è —Å–ª–æ–≤–∞—Ä—å, —Å–æ –≤—Å–µ–º–∏ –Ω—É–∂–Ω—ã–º–∏ URL –¥–ª—è –ì—É–≥–ª –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –º–æ–Ω–µ—Ç–µ"""
    urls = {
        "–ë–∏—Ç–∫–æ–∏–Ω" : "https://www.google.ru/search?q=%D0%BA%D1%83%D1%80%D1%81+%D0%B1%D0%B8%D1%82%D0%BA%D0%BE%D0%B8%D0%BD%D0%B0+%D0%B2+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0%D1%85&newwindow=1&sxsrf=APq-WBtBdKqkQi92if7GFoNVLmsBj0YTIw%3A1646135033894&ei=-QYeYuCbNvaGwPAP5_m82AM&oq=%D0%BA%D1%83%D1%80%D1%81+%D0%B1%D0%B8%D1%82%D0%BA%D0%BE%D0%B8%D0%BD%D0%B0+&gs_lcp=Cgdnd3Mtd2l6EAMYADIFCAAQgAQyBQgAEIAEMgsIABCABBCxAxCDATIFCAAQgAQyCwgAEIAEELEDEIMBMgsIABCABBCxAxCDATILCAAQgAQQsQMQgwEyBQgAEIAEMgUIABCABDIICAAQgAQQyQM6BwgAEEcQsAM6CggAEEcQsAMQyQM6BwgAELADEEM6EgguEMcBEKMCEMgDELADEEMYADoSCC4QxwEQ0QMQyAMQsAMQQxgASgUIPBIBMUoECEEYAEoECEYYAFD8B1j8B2CrF2gBcAF4AIABWYgBWZIBATGYAQCgAQHIAQ3AAQHaAQQIABgI&sclient=gws-wiz",
        "–≠—Ñ–∏—Ä–∏—É–º" : "https://www.google.ru/search?q=%D0%BA%D1%83%D1%80%D1%81+%D1%8D%D1%84%D0%B8%D1%80%D0%B0+%D0%B2+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0%D1%85&newwindow=1&sxsrf=APq-WBs4fiPng3SDNz21RPbRiLlkONm25g%3A1646135709828&ei=nQkeYveRMujrrgTloLSoDA&ved=0ahUKEwi31PGx7aT2AhXotYsKHWUQDcUQ4dUDCA0&uact=5&oq=%D0%BA%D1%83%D1%80%D1%81+%D1%8D%D1%84%D0%B8%D1%80%D0%B0+%D0%B2+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0%D1%85&gs_lcp=Cgdnd3Mtd2l6EAMyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIGCAAQBxAeOgcIIxCwAxAnOgcIABBHELADOgoIABBHELADEMkDOgcIABCwAxBDOhIILhDHARCjAhDIAxCwAxBDGAA6EgguEMcBENEDEMgDELADEEMYADoFCAAQxAI6CAgAEAgQBxAeSgUIPBIBMUoECEEYAEoECEYYAVCPBFiqF2DDHGgBcAF4AIABaYgBrwWSAQMzLjSYAQCgAQHIARHAAQHaAQYIABABGAg&sclient=gws-wiz",
        "–î—ç—à" : "https://www.google.ru/search?q=%D0%BA%D1%83%D1%80%D1%81+%D0%B4%D1%8D%D1%88%D0%B0+%D0%B2+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0%D1%85&newwindow=1&sxsrf=APq-WBtmMSf2QvDD_jPgIHFOdCWGPyUm9w%3A1646385772789&ei=bNohYt_RL7qSwPAPjO6k6AY&ved=0ahUKEwjft5n5kKz2AhU6CRAIHQw3CW0Q4dUDCA0&uact=5&oq=%D0%BA%D1%83%D1%80%D1%81+%D0%B4%D1%8D%D1%88%D0%B0+%D0%B2+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0%D1%85&gs_lcp=Cgdnd3Mtd2l6EAM6BwgjEOoCECc6BAgjECc6BAgAEEM6BQgAEIAEOggIABCxAxCDAToOCC4QsQMQgwEQxwEQowI6CwgAEIAEELEDEIMBOgoIABCxAxCDARBDOgcIABCxAxBDOgkIIxAnEEYQggI6DggAEIAEELEDEIMBEMkDOgcIABCABBAKOgQIABAKOgkIABANEEYQggI6BAgAEA06CggAEIAEEEYQggI6BggAEBYQHjoFCCEQoAFKBQg8EgEzSgQIQRgASgQIRhgAUKsFWIxEYKlFaAVwAXgAgAFliAH2DpIBBDIxLjGYAQCgAQGwAQrAAQE&sclient=gws-wiz"
    }
    return urls[crypto]


async def get_soup(URL, HEADERS):
    """–ü–æ–ª—É—á–∞–µ–º html-—Å—Ç—Ä–∞–Ω–∏—á–∫—É, –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Å—É–ø–∞"""
    html = requests.get(URL, headers=HEADERS)
    soup = BeautifulSoup(html.text, 'html.parser')
    return soup


async def get_price(soup):
    """–ü–∞—Ä—Å–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç, –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—É—é —Å—Ç—Ä–æ—á–∫—É —Ü–µ–Ω—ã"""
    crypto_price = soup.findAll('span', class_='pclqee')
    [crypto_price for price in crypto_price]
    return crypto_price[0]


async def go_crypto(name_of_crypto: str):
    """–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –æ—Ç–¥–µ–ª—å–Ω–æ –≤–∑—è—Ç–æ–π –º–æ–Ω–µ—Ç—ã \
        –ù–∞ –í—Ö–æ–¥ —Ñ—É–Ω–∫—Ü–∏—è –æ–∂–∏–¥–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç —Ñ–æ—Ä–º–∞—Ç–∞ —Å—Ç—Ä–æ–∫–∏ \
        (—Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–º–æ–Ω–µ—Ç—ã, –∫–æ—Ç–æ—Ä–æ–µ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ —Å –≥–æ—Ç–æ–≤—ã–º–∏ URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≤ –ì—É–≥–ª) \
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é price, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ü–µ–Ω—É –¥–ª—è –¥–∞–Ω–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã \
        –ü–µ—Ä–µ–¥ –≤—ã–≤–æ–¥–æ–º –∏–∑–≤–ª–µ—á—å –∏–∑ —Ç–µ–∫—Å—Ç –∏–∑ price -> price.text"""
    URL = await get_url(name_of_crypto)
    HEADERS = await get_headers()
    soup = await get_soup(URL, HEADERS)
    price = await get_price(soup)
    return price 


@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–º–æ—â—å –ø–æ –±–æ—Ç—É"""
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["–í—ã–≤–µ—Å—Ç–∏ –∫—É—Ä—Å –ë–∏—Ç–∫–æ–∏–Ω–∞", "–í—ã–≤–µ—Å—Ç–∏ –∫—É—Ä—Å –≠—Ñ–∏—Ä–∏—É–º–∞", "–í—ã–≤–µ—Å—Ç–∏ –∫—É—Ä—Å –î—ç—à–∞"]
    keyboard.add(*buttons)
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç, —è Konvik ‚ù§Ô∏è\n\n"
        "–ú–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –∫—É—Ä—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö —Ç–µ–±—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å üåç\n\n\n"
        "–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É, —Å –Ω—É–∂–Ω–æ–π —Ç–µ–±–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π üí¨ ‚¨á",
        reply_markup=keyboard)
    

@dp.message_handler()
async def get_btc_eth_button_or_text_input_to_bot(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ—Ç–∏—Ä–æ–≤–∫—É –∫—Ä–∏–ø—Ç–æ–≤–∞—é—Ç—ã"""
    try:
        await get_url(message["text"].split(" ")[2][0:-1])
        crypto_name = message["text"].split(" ")[2][0:-1]
        price = await go_crypto(message["text"].split(" ")[2][0:-1])
        await message.answer(f"{crypto_name}: {price.text}USD")
    except: await message.answer("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é üòì")
    
    
if __name__ == '__main__':
        executor.start_polling(dp)
